<?xml version="1.0" encoding="UTF-8"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://axelor.com/xml/ns/object-views
       http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">
 
  <grid model="com.axelor.gst.db.Address" title="Addresses" name="address-grid">
     <field name="line1" />
     <field name="line2"/>
     <field name="city"/>
     <field name="state"/>
     <field name="country"/>
     <field name="pinCode"/>
  </grid>
   
   <form model="com.axelor.gst.db.Address" title="Address" name="address-form">
     <panel title="Addresses">
        <field name="type" colSpan="12"/>
        <field name="line1"/>
        <field name="line2"/>
        <field name="city"/>
        <field name="state"/>
        <field name="country"/>
        <field name="pinCode"/>
    </panel>
    </form>
   
   
   
    <grid model="com.axelor.gst.db.City" title="Citys" name="city-grid">
       <field name="name"/>
       <field name="state"/> 
       <field name="country"/>  
  </grid> 
    
    <form model="com.axelor.gst.db.City" title="City" name="city-form">
       <panel title="City">
        <field name="name"/>
       <field name="state"/> 
       <field name="country"/>
       </panel>
    </form>   
     
     
     
     <grid model="com.axelor.gst.db.State" title="States" name="state-grid">
       <field name="name"/>
       <field name="country"/>  
  </grid>   
       
    <form model="com.axelor.gst.db.State" title="State" name="state-form">
       <panel title="State">
        <field name="name"/>
       <field name="country"/> 
       </panel>
    </form>     
       
       
       
     <grid model="com.axelor.gst.db.Country" title="Countrys" name="country-grid">
       <field name="name"/>
  </grid>   
       
      <form model="com.axelor.gst.db.Country" title="Country" name="country-form">
       <panel title="Country">
        <field name="name"/>
        </panel>
    </form>  
   
   <!-- 	
	public class SequenceServiceImp implements SequenceService{
		
		@Override
		@Transactional
		public String setSequence(String model) {
			SequenceRepository repo = Beans.get(SequenceRepository.class);
			Sequence s =  repo.all().fetch().stream().filter(i->i.getModel().getFullName().equals(model)).findFirst().get();
			String SEQUENCE = "";
			if (s != null) {
				
				String prefix = s.getPrefix();
				String suffix = s.getSuffix();
				Integer padding = s.getPadding();
				Integer incrementOf = s.getIncrementOf();
				String pad = new String("0");
				
				for(int i =0;i<padding-1;i++) {
					pad = pad+"0";  
				}
				Integer nextNumber =Integer.parseInt(s.getNextNumber());
				
				SEQUENCE = prefix+pad+nextNumber+suffix;
				 
				nextNumber = nextNumber + incrementOf;
		
				s.setNextNumber(nextNumber.toString());
				repo.save(s);
				
				 System.err.println(s.getNextNumber());
				 System.err.println(s.getIncrementOf());
				 System.err.println(SEQUENCE);
				 return SEQUENCE;
			}
			return SEQUENCE;
		}
	} -->
   
  </object-views>      